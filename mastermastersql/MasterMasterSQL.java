/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mastermastersql;

/**
 *
 * @author Kingston
 */
//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!

import java.awt.*;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.*;

public class MasterMasterSQL extends JPanel {
    private JLabel labelTitle;
    private JTextField tfUsername1;
    private JLabel labelUsername;
    private JLabel labelLogin;
    private JTextField tfPassword1;
    private JLabel labelPassword;
    private JLabel labelCreateUser;
    private JTextField tfUsername2;
    private JTextField tfPassword2;
    private JButton btnExecute1;
    private JButton btnExecute2;
    private JTextArea taShowMaster;
    private JButton btnExecute3;
    private JLabel labelShowMaster;
    private JButton btnConnectMaster;
    private JTextField taQuery;
    private JLabel labelQuery;
    private JTextArea taResults;
    private JLabel labelResults;
    private JButton btnExecute4;
    private JButton btnClear;
    private JLabel labelServer;
    private JLabel labelFile;
    private JLabel labelPosition;
    private JTextField tfServer;
    private JTextField tfFile;
    private JTextField tfPosition;
    private JButton btnRestartServer;
    
    private Process p = null;
    private String res;

    public MasterMasterSQL() {
        //construct components
        labelTitle = new JLabel ("MASTER MASTER SETUP");
        tfUsername1 = new JTextField (5);
        labelUsername = new JLabel ("username");
        labelLogin = new JLabel ("Login");
        tfPassword1 = new JTextField (5);
        labelPassword = new JLabel ("password");
        labelCreateUser = new JLabel ("Create User");
        tfUsername2 = new JTextField (5);
        tfPassword2 = new JTextField (5);
        btnExecute1 = new JButton ("Execute");
        btnExecute2 = new JButton ("Execute");
        taShowMaster = new JTextArea (5, 5);
        btnExecute3 = new JButton ("Execute");
        labelShowMaster = new JLabel ("Show Master Status");
        btnConnectMaster = new JButton ("CONNECT MASTERS");
        taQuery = new JTextField (5);
        labelQuery = new JLabel ("Query");
        taResults = new JTextArea (5, 5);
        labelResults = new JLabel ("Results");
        btnExecute4 = new JButton ("Execute");
        btnClear = new JButton ("Clear");
        labelServer = new JLabel ("Server");
        labelFile = new JLabel ("File");
        labelPosition = new JLabel ("Position");
        tfServer = new JTextField (5);
        tfFile = new JTextField (5);
        tfPosition = new JTextField (5);
        btnRestartServer = new JButton ("Restart Server");

        //set components properties
        labelServer.setToolTipText ("IP of Master");
        labelFile.setToolTipText ("from Show Master Status");
        labelPosition.setToolTipText ("from Show Master Status");

        //adjust size and set layout
        setPreferredSize (new Dimension (732, 429));
        setLayout (null);

        //add components
        add (labelTitle);
        add (tfUsername1);
        add (labelUsername);
        add (labelLogin);
        add (tfPassword1);
        add (labelPassword);
        add (labelCreateUser);
        add (tfUsername2);
        add (tfPassword2);
        add (btnExecute1);
        add (btnExecute2);
        add (taShowMaster);
        add (btnExecute3);
        add (labelShowMaster);
        add (btnConnectMaster);
        add (taQuery);
        add (labelQuery);
        add (taResults);
        add (labelResults);
        add (btnExecute4);
        add (btnClear);
        add (labelServer);
        add (labelFile);
        add (labelPosition);
        add (tfServer);
        add (tfFile);
        add (tfPosition);
        add (btnRestartServer);

        //set component bounds (only needed by Absolute Positioning)
        labelTitle.setBounds (325, 15, 150, 35);
        tfUsername1.setBounds (90, 105, 110, 25);
        labelUsername.setBounds (20, 110, 65, 25);
        labelLogin.setBounds (100, 65, 45, 30);
        tfPassword1.setBounds (90, 145, 110, 25);
        labelPassword.setBounds (20, 145, 65, 25);
        labelCreateUser.setBounds (225, 65, 100, 25);
        tfUsername2.setBounds (215, 105, 100, 25);
        tfPassword2.setBounds (215, 145, 100, 25);
        btnExecute1.setBounds (90, 190, 100, 25);
        btnExecute2.setBounds (220, 190, 100, 25);
        taShowMaster.setBounds (325, 105, 150, 75);
        btnExecute3.setBounds (345, 190, 100, 25);
        labelShowMaster.setBounds (330, 60, 125, 30);
        btnConnectMaster.setBounds (510, 210, 165, 35);
        taQuery.setBounds (65, 265, 155, 115);
        labelQuery.setBounds (120, 225, 45, 30);
        taResults.setBounds (235, 265, 335, 115);
        labelResults.setBounds (345, 225, 65, 30);
        btnExecute4.setBounds (90, 390, 100, 25);
        btnClear.setBounds (340, 390, 100, 25);
        labelServer.setBounds (485, 105, 60, 25);
        labelFile.setBounds (485, 135, 100, 25);
        labelPosition.setBounds (485, 165, 65, 25);
        tfServer.setBounds (555, 105, 120, 25);
        tfFile.setBounds (555, 135, 120, 25);
        tfPosition.setBounds (555, 165, 120, 25);
        btnRestartServer.setBounds (585, 295, 130, 50);
        
        btnExecute1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                try
                {
                    p = Runtime.getRuntime().exec("cmd /C mysql");
                    System.out.println("cmd /C "+"mysql -u "+tfUsername1.getText()+" -p");
                    BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));  
                    String line = null;  
                    while ((line = in.readLine()) != null) {  
                    System.out.println(line);
               
            }
                } catch (IOException ex)
                {
                    Logger.getLogger(MasterMasterSQL.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        btnExecute2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

            }
        });
        
        btnExecute3.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

            }
        });
        
        btnExecute4.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

            }
        });
        
        btnConnectMaster.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

            }
        });
        
        btnClear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

            }
        });   
        
        btnRestartServer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                taResults.setText("");
            }
        });
    }
    



    public static void main (String[] args) {
        JFrame frame = new JFrame ("Master Master Setup");
        frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add (new MasterMasterSQL());
        frame.pack();
        frame.setVisible (true);
    }
}

