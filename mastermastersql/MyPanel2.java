//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!
package mastermastersql;

import java.awt.*;
import java.awt.event.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.*;
import tcp.Client;

public class MyPanel2 extends JPanel {
    private JLabel lbQuery;
    private JTextArea taQuery;
    private JButton btnExecute;
    private JButton btnClear;
    private JLabel lbLog;
    private JTextArea taLog;
    private JButton btnResult;
    private Controller c;
    private Database db;
    private ResultSet result;
    private Client client;
    
    public MyPanel2(Controller c) {
        this.c = c;
        setDB();
        //construct components
        lbQuery = new JLabel ("Query :");
        taQuery = new JTextArea (5, 5);
        btnExecute = new JButton ("EXECUTE");
        btnClear = new JButton ("CLEAR");
        lbLog = new JLabel ("Log :");
        taLog = new JTextArea (5, 5);
        btnResult = new JButton ("SHOW RESULTS");

        //adjust size and set layout
        setPreferredSize (new Dimension (716, 444));
        setLayout (null);

        //add components
        add (lbQuery);
        add (taQuery);
        add (btnExecute);
        add (btnClear);
        add (lbLog);
        add (taLog);
        add (btnResult);

        //set component bounds (only needed by Absolute Positioning)
        lbQuery.setBounds (35, 20, 100, 25);
        taQuery.setBounds (35, 45, 305, 320);
        btnExecute.setBounds (35, 375, 100, 25);
        btnClear.setBounds (235, 15, 100, 25);
        lbLog.setBounds (365, 20, 100, 25);
        taLog.setBounds (365, 45, 315, 320);
        btnResult.setBounds (150, 375, 140, 25);
        
        btnExecute.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                client.sendOut("Hello");
                setDB();
                Object o = db.execQuery(taQuery.getText());
                try{
                    String s = (String) o;
                    JOptionPane.showMessageDialog(null,
                    s,
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
                }
                catch(Exception e){

                    try{
                         int u = (Integer) o;
                         JOptionPane.showMessageDialog(null,
                            u + "rows udpated");
                    }
                    catch(Exception exc){
                            ResultSet rs = (ResultSet) o;
                            result = rs;
                            JOptionPane.showMessageDialog(null,
                            "Execution Successfull");    
                            
                    }


                }
            }
        });    
        
        btnResult.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
            ResultPanel rp = new ResultPanel();
            rp.myModel(result);//pass result set to result panel

            JFrame frame = new JFrame ("Results");
            frame.setDefaultCloseOperation (frame.DISPOSE_ON_CLOSE);
            frame.getContentPane().add (rp);
            frame.pack();
            frame.setVisible (true);
            
            
            }                
        });
        
        btnClear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
            taQuery.setText("");
            }                
        });
    }

    
    public void setDB(){
        db = c.getDb();
    }

    public void appendLog(String string)
    {
        taLog.append(string);
    }

    public void setClient(Client client)
    {
        this.client = client;
    }
}